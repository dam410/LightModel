function [r_pt,J_r_pt] = radius_from_H(pt_in,H)

	nb_pt = size(pt_in,1);
	% Project the points
	proj_pt = [pt_in,ones(nb_pt,1)]*transpose(H);
	Qx = proj_pt(:,1);
	Qy = proj_pt(:,2);
	Qz = proj_pt(:,3);
	% Calculate radius
	r_pt = (Qx.^2+Qy.^2)./(Qz.^2);

	% Calculate the Jacobian
	J_Qx = [pt_in(:,1),zeros(nb_pt,2),pt_in(:,2),zeros(nb_pt,2),ones(nb_pt,1),zeros(nb_pt,2)];
	J_Qy = [zeros(nb_pt,1),pt_in(:,1),zeros(nb_pt,2),pt_in(:,2),zeros(nb_pt,2),ones(nb_pt,1),zeros(nb_pt,1)];
	J_Qz = [zeros(nb_pt,2),pt_in(:,1),zeros(nb_pt,2),pt_in(:,2),zeros(nb_pt,2),ones(nb_pt,1)];
	J_Qx2 = 2*Qx.*J_Qx;
	J_Qy2 = 2*Qy.*J_Qy;
	Qz2_inv = 1./(Qz.^2);
	J_Qz2_inv = -2*J_Qz./(Qz.^3);
	J_Qx2_Qz2 = -2*Qx.^2*J_Qz./(Qz.^3);
	J_r_pt = Qz2_inv.*J_Qx2+Qx.^2.*J_Qz2_inv+Qz2_inv.*J_Qy2+Qy.^2.*J_Qz2_inv;
end
