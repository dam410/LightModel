function [A,J] = convertE(P)
%% Conversion of Ellipse from center, major, minor axes and angle to matrix expression
%% 	P = [x0,y0,a,b,alpha] (,score]) optional
T = [cos(P(5)),-sin(P(5)),P(1);sin(P(5)),cos(P(5)),P(2);0,0,1];
C = [1/(P(3)*P(3)),0,0;0,1/(P(4)*P(4)),0;0,0,-1];
invT = [cos(P(5)),sin(P(5)),-cos(P(5))*P(1)-sin(P(5))*P(2);...
	-sin(P(5)),cos(P(5)),sin(P(5))*P(1)-cos(P(5))*P(2);...
	0,0,1];
A = invT'*C*invT;
if nargout > 1
	% Get the 9x5 Jacobian matrix
	J_invT_t = [0, 0, 0, 0, -sin(P(5));...
		0, 0, 0, 0, cos(P(5));...
		-cos(P(5)), -sin(P(5)), 0, 0, P(1)*sin(P(5))-cos(P(5))*P(2);...
		0, 0, 0, 0, -cos(P(5));...
		0, 0, 0, 0, -sin(P(5));...
		sin(P(5)), -cos(P(5)), 0, 0, P(1)*cos(P(5))+sin(P(5))*P(2);...
		0, 0, 0, 0, 0;...
		0, 0, 0, 0, 0;...
		0, 0, 0, 0, 0];

	J_C = [0, 0, -2/(P(3)^3), 0, 0;...
		0, 0, 0, 0, 0;...
		0, 0, 0, 0, 0;...
		0, 0, 0, 0, 0;...
		0, 0, 0, -2/(P(4)^3), 0;...
		0, 0, 0, 0, 0;...
		0, 0, 0, 0, 0;...
		0, 0, 0, 0, 0;...
		0, 0, 0, 0, 0];
	
	J_invT = J_invT_t([1,4,7,2,5,8,3,6,9],:);
	C_lin = C(:);
	invT_t = invT';
	invT_lin = invT(:);
	invT_t_lin = invT_t(:);
	J = zeros(9,5);
	for i = 1:5
		dinvT_t = reshape(J_invT_t(:,i),3,3);
		dinvT = reshape(J_invT(:,i),3,3);
		dC = reshape(J_C(:,i),3,3);
		dA = dinvT_t*C*invT+invT_t*dC*invT+invT_t*C*dinvT; 
		J(:,i) = dA(:); 
	end
end
end
